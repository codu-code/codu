// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id           String   @id @unique
  title        String
  coverImage   String?
  approved     Boolean  @default(true)
  body         String   @db.Text()
  excerpt      String   @default("") @db.VarChar(140)
  readTimeMins Int
  published    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  slug         String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                 String    @id @default(cuid())
  username           String?   @unique @db.VarChar(40)
  name               String    @default("")
  email              String?   @unique
  emailVerified      DateTime?
  image              String    @default("/images/person.png")
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  bio                String    @default("") @db.VarChar(200)
  location           String    @default("")
  websiteUrl         String    @default("")
  emailNotifications Boolean   @default(true)
  newsletter         Boolean   @default(true)
  accounts           Account[]
  sessions           Session[]
  posts              Post[]
  role               Role      @default(USER)

  @@index(fields: [username, id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  USER
  ADMIN
  MODERATOR
}
