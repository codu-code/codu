// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id           String   @id @unique
  title        String
  coverImage   String?
  approved     Boolean  @default(true)
  body         String   @db.Text()
  excerpt      String?  @db.VarChar(140)
  readTimeMins Int
  published    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  slug         String?  @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Profile {
  id                 String   @id @unique @db.VarChar(40)
  firstName          String?
  lastName           String?
  userId             String   @unique
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  bio                String?  @db.VarChar(200)
  location           String?
  emailNotifications Boolean  @default(true)
  newsletter         Boolean  @default(true)
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Post          Post[]
  Profile       Profile?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  USER
  ADMIN
}
