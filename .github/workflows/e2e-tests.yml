name: E2E Tests

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  e2e:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: "postgresql://postgres:secret@codu-db:5432/postgres"
      NEXTAUTH_URL: http://localhost:3000/api/auth
      GITHUB_ID: ${{ secrets.E2E_GITHUB_ID }}
      GITHUB_SECRET: ${{ secrets.E2E_GITHUB_SECRET }}

    services:
      codu-db:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'lts/*'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Docker Compose
      uses: docker/setup-qemu-action@v2
    - name: Install Docker Compose
      run: |
        DOCKER_COMPOSE_VERSION=2.2.3
        mkdir -p ~/.docker/cli-plugins/
        curl -SL https://github.com/docker/compose/releases/download/v$DOCKER_COMPOSE_VERSION/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
        chmod +x ~/.docker/cli-plugins/docker-compose

    - name: Check Docker Compose version
      run: docker-compose --version

    - name: Wait for PostgreSQL to be ready
      run: docker-compose exec codu-db pg_isready -U postgres

    - name: Install dependencies
      run: npm install

    - name: Seed database
      run: |
        npm db:push
        npm db:seed

    - name: Run Playwright tests
      run: npx playwright test --reporter=github

    - name: Upload Playwright artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-artifacts
        path: |
          playwright-report
          test-results
          traces

    - name: Save traces for inspection
      if: failure()
      run: |
        mkdir -p trace-artifacts
        [ -d playwright-report ] && cp -R playwright-report trace-artifacts/ || echo "No Playwright report to copy."
        [ -d traces ] && cp -R traces/* trace-artifacts/ || echo "No trace files to copy."

    - name: Upload traces
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-traces
        path: trace-artifacts